package com.baidu.beidou.cprogroup.bo;

import java.util.ArrayList;
import java.util.List;

import org.apache.commons.lang.StringUtils;

// Generated 2008-7-19 14:42:33 by Hibernate Tools 3.2.1.GA

/**
 * CproPlan generated by hbm2java
 */
public class CproGroupMoreInfo extends CproGroup {

	/**
	 * 
	 */
	private static final long serialVersionUID = -5685011340739928402L;

	private static final String FILE_SEPERATOR = "|";

	private String groupName;

	private Integer price;

	private Integer isAllRegion;

	private String regListStr;

	private Integer isAllSite;

	public Integer getIsAllRegion() {
		return isAllRegion;
	}

	public void setIsAllRegion(Integer isAllRegion) {
		this.isAllRegion = isAllRegion;
	}

	public Integer getIsAllSite() {
		return isAllSite;
	}

	public void setIsAllSite(Integer isAllSite) {
		this.isAllSite = isAllSite;
	}

	public Integer getPrice() {
		return price;
	}

	public void setPrice(Integer price) {
		this.price = price;
	}

	public String getRegListStr() {
		return regListStr;
	}

	public void setRegListStr(String regListStr) {
		this.regListStr = regListStr;
	}

	public String getGroupName() {
		return groupName;
	}

	public void setGroupName(String groupName) {
		this.groupName = groupName;
	}

	public boolean equals(Object other) {
		if ((this == other)) {
			return true;
		}
		if ((other == null)) {
			return false;
		}
		if (!(other instanceof CproGroupMoreInfo)) {
			return false;
		}
		CproGroupMoreInfo castOther = (CproGroupMoreInfo) other;

		if (!this.getPrice().equals(castOther.getPrice())) {
			return false;
		}

		if (!this.getIsAllSite().equals(castOther.getIsAllSite())) {
			return false;
		}

		if (this.getIsAllSite() == 0) {
			List<Integer> siteTradeList = this.unConvertStrToList(this.getSiteTradeList());
			List<Integer> siteTradeListOther = this.unConvertStrToList(castOther.getSiteTradeList());

			if (!siteTradeList.equals(siteTradeListOther)) {
				return false;
			}

			List<Integer> siteIdList = this.unConvertStrToList(this.getSiteList());
			List<Integer> siteIdListOther = this.unConvertStrToList(castOther.getSiteList());

			if (!siteIdList.equals(siteIdListOther)) {
				return false;
			}
		}

		if (!this.getIsAllRegion().equals(castOther.getIsAllRegion())) {
			return false;
		}

		if (this.getIsAllRegion() == 0) {

			List<Integer> regList = this.unConvertStrToList(this.getRegListStr());
			List<Integer> regListOther = this.unConvertStrToList(castOther.getRegListStr());

			if (!regList.equals(regListOther)) {
				return false;
			}
		}

		return true;
	}

	public int hashCode() {

		int result = 17;

		result = 37 * result + this.getPrice().hashCode();

		result = 37 * result + this.getIsAllSite().hashCode();

		if (this.getIsAllSite() == 0) {
			List<Integer> siteTradeList = this.unConvertStrToList(this.getSiteTradeList());

			result = 37 * result + (siteTradeList.hashCode());

			List<Integer> siteIdList = this.unConvertStrToList(this.getSiteList());

			result = 37 * result + (siteIdList.hashCode());
		}

		result = 37 * result + this.getIsAllRegion().hashCode();

		if (this.getIsAllRegion() == 0) {
			List<Integer> regList = this.unConvertStrToList(this.getRegListStr());

			result = 37 * result + (regList.hashCode());
		}

		return result;
	}

	/**
	 * 将存储的id字符串反转成id列表，例如：地域、网站行业、网站
	 * 
	 * @param idsStr
	 * @return下午01:33:26
	 */
	private List<Integer> unConvertStrToList(final String idsStr) {
		List<Integer> idList = new ArrayList<Integer>();

		if (StringUtils.isEmpty(idsStr)) {
			return idList;
		}

		String[] idsStrArr = idsStr.split("\\" + FILE_SEPERATOR);

		for (String idStr : idsStrArr) {
			idList.add(Integer.valueOf(idStr));
		}

		return idList;
	}
}